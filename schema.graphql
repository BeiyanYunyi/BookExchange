enum UserRole {
  ADMIN
  DEFAULT
}

enum BookStatus {
  PENDING
  AVALIABLE
  ORDERED
  BORROWED
  LOST
}

scalar Date

type User {
  id: ID!
  name: String!
  password: String
  avatar: String
  role: UserRole
  stuNum: String
  college: String
  class: String
  lastRevokeTime: Date
  ordered: [Book]
  owned: [Book]
}

type Book {
  id: ID!
  title: String!
  desc: String!
  author: String!
  img: String
  status: BookStatus!
  orderBy: User
  owner: User
}

type Query {
  user(id: ID!): User
  users: [User]
  book(id: ID!): Book
  books: [Book]
}

input UserRegisterInfo {
  name: String!
  password: String!
  stuNum: String!
  college: String!
  class: String!
}

input UserLoginInfo {
  stuNum: String!
  password: String!
}

type UserAndToken {
  user: User!
  token: String!
}

type Mutation {
  register(info: UserRegisterInfo): UserAndToken
  login(info: UserLoginInfo): UserAndToken
}
